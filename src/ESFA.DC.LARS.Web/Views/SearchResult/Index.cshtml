@model ESFA.DC.LARS.Web.Models.ViewModels.SearchResultsViewModel

@{
    ViewData["Title"] = "Index";
    var resultsFound = Model?.LearningAimModels != null && Model.LearningAimModels.Any();
    var academicYear = Model.SearchModel.TeachingYears.FirstOrDefault();
}

<div id="app">
    @using (Html.BeginForm("Search", "SearchResult", FormMethod.Post, new {@id = "filterForm", @class = "govuk-form-group"}))
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <div class="standard-search">
                    <h1 class="govuk-heading-xl govuk-!-margin-bottom-5">Search</h1>
                    <div class="govuk-form-group">
                        <div id="tt-overlay" class="autocomplete-wrapper second">
                            <div class="autocomplete__wrapper" role="combobox" aria-expanded="false">
                                <input class="autocomplete__input autocomplete__input--default" id="autocomplete-overlay" name="SearchTerm"
                                       placeholder="e.g Maths or 40010740" type="text" value="@Model.SearchModel.SearchTerm" maxlength="200"/>
                            </div>
                        </div>
                        <button id="searchProviders" type="submit" class="govuk-button">
                            <img src="https://assets.publishing.service.gov.uk/frontend/govuk_publishing_components/search-button-ca89b2a79f944909ceb7370d3f0b78811d32b96e883348fcd8886f63dd619585.png"/>
                        </button>
                    </div>
                </div>

                <ul class="govuk-list">
                    @foreach (var error in Model.ValidationErrors)
                    {
                        <li class="govuk-error-message">@error</li>
                    }
                </ul>
            </div>
        </div>

        <div class="govuk-grid-row govuk-!-margin-top-6">
            <div class="govuk-grid-column-one-third">
                <noscript id="filtersNoScript">
                    @await Html.PartialAsync("_SearchFilters", Model)

                    <input type="submit" value="Update results" class="govuk-!-margin-top-4 govuk-button govuk-button--secondary" />

                    @Html.ActionLink(
                        "Clear Filters",
                        "ClearFilters",
                        new { searchTerm = Model.SearchModel.SearchTerm },
                        new { @class = "govuk-!-margin-top-4 govuk-button govuk-button--secondary" })
                </noscript>

                <script id="filtersTemplate" type="text/x-template">
                    <div>
                        @await Html.PartialAsync("_SearchFilters", Model)
                    </div>
                </script>
                <filters></filters>
            </div>

            <div class="govuk-grid-column-two-thirds">

                <ul id="resultList" class="govuk-list">
                    @if (resultsFound)
                    {
                        <p class="govuk-body flex space-between">
                            <span>@Model.LearningAimModels.Count() results</span>
                        </p>

                        <filter-feedback></filter-feedback>
                        
                        <hr class="colour-black govuk-section-break govuk-section-break--m govuk-section-break--visible">
                        @foreach (var learningAim in Model.LearningAimModels)
                        {
                            <li>
                                <h3 class="govuk-!-margin-0">
                                    @Html.ActionLink(
                                        learningAim.LearningAimTitle,
                                        "RedirectToDetails",
                                        new { learnAimRef = learningAim.LearnAimRef, academicYear = academicYear },
                                        new { @class = "govuk-link govuk-link--no-visited-state govuk-!-font-weight-bold no-underline" })
                                </h3>
                                <div class="flex space-between">
                                    <div class="aims-list govuk-body govuk-!-font-size-16 govuk-!-margin-top-2 flex-col flex-1">
                                        <span><strong>Reference:</strong> @learningAim.LearnAimRef</span>
                                        <span><strong>Assessor:</strong> @learningAim.AwardingBodyCode</span>
                                    </div>
                                    <div class="aims-list govuk-body govuk-!-font-size-16 govuk-!-margin-top-2 flex-col flex-1">
                                        <span><strong>NVQ notional level:</strong> @learningAim.Level</span>
                                        <span><strong>Guided learning hours:</strong> @learningAim.GuidedLearningHours </span>
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(academicYear) && academicYear.Trim().Length == 4)
                                {
                                    var validities = learningAim.AcademicYears.Where(ay => ay.AcademicYear.Equals(academicYear)).SelectMany(p => p.Validities);

                                    <div class="aims-list govuk-body govuk-!-font-size-16 flex-col flex-1">
                                        <strong>Available funding streams for academic year @($"20{academicYear.Substring(0, 2)} to 20{academicYear.Substring(2, 2)}:")</strong>
                                    </div>

                                    <div class="flex-wrap govuk-!-font-size-16">
                                        @foreach (var validity in validities)
                                        {
                                            <div class="flex-third govuk-!-margin-bottom-2">
                                                @validity.ValidityCategoryDescription
                                            </div>
                                        }
                                    </div>
                                }
                            </li>
                        }
                    }
                    else
                    {
                        <li>No results found</li>
                    }
                </ul>

            </div>
        </div>
    }
</div>

@section PageScripts
{
    <script type="module" src="/assets/dist/js/app.js"></script>
    <script>
         var element = document.getElementById("filtersNoScript");
         element.parentNode.removeChild(element);
    </script>
}