@model ESFA.DC.LARS.Web.Models.ViewModels.LearningAimDetailsViewModel
@{
    var academicYear = Model?.LearningAimModel?.AcademicYears.FirstOrDefault(ay => ay.AcademicYear == Model.AcademicYear);
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">
            @Model.LearningAimModel.LearningAimTitle
        </h1>
        <div class="flex space-between">
            <dl id="qualificationDetails" class="govuk-summary-list govuk-!-margin-bottom-9">
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Reference
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.LearningAimModel.LearnAimRef
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Level
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.LearningAimModel.Level
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Awarding body
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.LearningAimModel.AwardingBodyName
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Type
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.LearningAimModel.Type
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Guided learning hours
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.LearningAimModel.GuidedLearningHours
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Level 3 Category
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.LearningAimModel.AcademicYears.Where(ay => ay.AcademicYear == academicYear?.AcademicYear).Select(ay => ay.Level3Category).FirstOrDefault()
                    </dd>
                </div>
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Level 2 Category
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.LearningAimModel.AcademicYears.Where(ay => ay.AcademicYear == academicYear?.AcademicYear).Select(ay => ay.Level2Category).FirstOrDefault()
                    </dd>
                </div>
            </dl>
        </div>
        <div>
            <a render-if="Model.LearningAimModel.Categories?.Count > 0" asp-controller="@Model.CategoryController" asp-action="Index" asp-route-learnAimRef="@Model.LearningAimModel.LearnAimRef" class="govuk-link govuk-link--no-visited-state">View category information</a>
        </div>
        <div>
            <a render-if="Model.LearningAimModel.IsOFQUAL" class="govuk-link govuk-link--no-visited-state" target="blank" href="https://register.ofqual.gov.uk/Search?category=Qualifications&amp;query=@Model.LearningAimModel.LearnAimRef">View more information on OFQUAL</a>
        </div>
    </div>
    <div class="govuk-grid-column-one-third academic-year-wrapper">
        <div class="govuk-form-group" render-if="Model.AcademicYearsForLearningAim.Any()">
            <label class="govuk-label" for="academicYear">
                Academic year
            </label>
            @using (Html.BeginForm("ChangeAcademicYear", Model.FormController, FormMethod.Post, new { @id = "academicYearForm", @class = "govuk-form-group" }))
            {
                <input type="hidden" name="learnAimRef" value="@Model.LearningAimModel.LearnAimRef">
                <select class="govuk-select" id="academicYear" name="AcademicYear" onchange="this.form.submit()">
                    @foreach (var year in Model.AcademicYearsForLearningAim)
                    {
                        @if (Model.AcademicYear.Equals(year.AcademicYear, StringComparison.OrdinalIgnoreCase))
                        {
                            <option value="@year.AcademicYear" selected>@year.AcademicYearDesc</option>
                        }
                        else
                        {
                            <option value="@year.AcademicYear">@year.AcademicYearDesc</option>
                        }
                    }
                </select>
                <noscript>
                    <br />
                    <input type="submit" value="Update" class="govuk-!-margin-top-4 govuk-button" />
                </noscript>
            }
        </div>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <div class="govuk-accordion" data-module="govuk-accordion" id="accordion-with-summary-sections" render-if="academicYear != null">
            @{int categoryIndex = 1;}
            @foreach (var category in academicYear.Validities)
            {
                var fundings = new List<FundingModel>();

                var validityFundingCategory = Model.LookUpModel.ValidityFundingMappingLookups
                    .Where(l => l.ValidityCategory.Equals(category.ValidityCategory, StringComparison.OrdinalIgnoreCase))
                    .ToList();
                if (validityFundingCategory.Any())
                {
                    fundings = academicYear.Fundings
                        .Where(f =>
                            validityFundingCategory.Any(vfc => f.FundingCategory.Equals(vfc.FundingCategory, StringComparison.OrdinalIgnoreCase)))
                        .ToList();
                }

                <div class="govuk-accordion__section">
                    <div class="govuk-accordion__section-header">
                        <h2 class="govuk-accordion__section-heading" id="category-heading-@categoryIndex">
                            <span class="govuk-accordion__section-button">
                                @category.ValidityCategoryDescription
                            </span>
                        </h2>

                        <div class="govuk-accordion__section-summary govuk-body">
                            <span>
                                <strong>Last date for new start:</strong> @category.LastNewStartDate?.ToDateString()
                            </span>
                        </div>
                    </div>

                    <div class="govuk-body govuk-accordion__section-content category-no-top-padding" aria-labelledby="category-heading-@categoryIndex">
                        <p> <strong>Course validity:</strong> </p>
                        <p> <strong> From:</strong> @category.StartDate.ToDateString() <strong>to</strong> @category.EndDate?.ToDateString()</p>

                        @foreach (var funding in fundings)
                        {
                            <ul class="govuk-list">
                                <li>
                                    <strong> Category:</strong> @funding.FundingCategory
                                </li>
                                <li>
                                    <strong>Effective from:</strong> @funding.EffectiveFrom.ToDateString()
                                </li>
                                <li>
                                    <strong>Effective to:</strong> @funding.EffectiveTo?.ToDateString()
                                </li>
                                <li>
                                    <strong> Programme weighting:</strong> @funding.WeightingFactor
                                </li>
                                <li>
                                    <strong>Weighted rate:</strong> £@($"{funding.RateWeighted:N2}")
                                </li>
                                <li>
                                    <strong>Unweighted rate:</strong> £@($"{funding.RateUnWeighted:N2}")
                                </li>
                            </ul>
                        }
                    </div>
                </div>
                categoryIndex++;
            }
        </div>
    </div>
</div>